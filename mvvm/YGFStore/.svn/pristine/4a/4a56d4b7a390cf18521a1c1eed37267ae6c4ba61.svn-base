package com.neufmer.ygfstore.ui.main.fragment.history;

import android.annotation.SuppressLint;
import android.app.Application;
import android.databinding.ObservableField;
import android.databinding.ObservableInt;
import android.os.Bundle;
import android.support.annotation.NonNull;
import android.view.View;

import com.neufmer.ygfstore.R;
import com.neufmer.ygfstore.bean.SelectDateBean;
import com.neufmer.ygfstore.ui.search_history.date.SearchHistoryDateActivity;
import com.neufmer.ygfstore.ui.search_history.keyword.SearchHistoryKeywordActivity;
import com.wangxing.code.mvvm.base.BaseViewModel;
import com.wangxing.code.mvvm.binding.command.BindingAction;
import com.wangxing.code.mvvm.binding.command.BindingCommand;
import com.wangxing.code.mvvm.utils.ContextUtils;
import com.wangxing.code.mvvm.utils.StringUtils;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

/**
 * Created by WangXing on 2019/6/13.
 */
public class HistoryFragmentViewModel extends BaseViewModel {

    public ObservableField<String> selectedDate = new ObservableField<>(ContextUtils.getContext().getString(R.string.history_fragment_current_month));

    public ObservableInt syncVisibility = new ObservableInt(View.GONE);

    private SelectDateBean mSelectDateBean;

    public HistoryFragmentViewModel(@NonNull Application application) {
        super(application);
    }

    /**
     * 选择日期
     */
    public BindingCommand selectDate = new BindingCommand(new BindingAction() {
        @Override
        public void call() {
            Bundle mBundle = new Bundle();
            if (mSelectDateBean != null) {
                if (!StringUtils.isEmpty(mSelectDateBean.getMonthDay())) {
                    mBundle.putInt("searchType", 0);
                } else {
                    mBundle.putInt("searchType", 1);
                }
            } else {
                mBundle.putInt("searchType", 0);
            }
            mBundle.putParcelable("searchData", mSelectDateBean);
            startActivity(SearchHistoryDateActivity.class, mBundle);
        }
    });

    @SuppressLint("SimpleDateFormat")
    public void setSelectDateBean(SelectDateBean data) {
        mSelectDateBean = data;
        SimpleDateFormat monthFormat = new SimpleDateFormat("yyyy-MM");
        SimpleDateFormat dayFormat = new SimpleDateFormat("yyyy-MM-dd");
        Date date;
        Calendar calendar = Calendar.getInstance();
        try {
            if (!StringUtils.isEmpty(data.getMonthDay())) {
                //按月
                date = monthFormat.parse(data.getMonthDay());
                int currentMonth = calendar.get(Calendar.MONTH);
                int currentYear = calendar.get(Calendar.YEAR);
                calendar.setTime(date);
                if (currentMonth == calendar.get(Calendar.MONTH) &&
                        currentYear == calendar.get(Calendar.YEAR)) {
                    selectedDate.set(ContextUtils.getContext().getString(R.string.history_fragment_current_month));
                } else {
                    selectedDate.set(calendar.get(Calendar.MONTH) + 1 + "月");
                }
            } else {
                //按日
                date = dayFormat.parse(data.getStartDay());
                calendar.setTime(date);
                String startMonth = String.valueOf(calendar.get(Calendar.MONTH) + 1);
                String startDay = String.valueOf(calendar.get(Calendar.DAY_OF_MONTH));

                date = dayFormat.parse(data.getEndDay());
                calendar.setTime(date);
                String endMonth = String.valueOf(calendar.get(Calendar.MONTH) + 1);
                String endDay = String.valueOf(calendar.get(Calendar.DAY_OF_MONTH));
                selectedDate.set(startMonth + "-" + startDay + "~" + endMonth + "-" + endDay);
            }
        } catch (ParseException e) {
            e.printStackTrace();
        }
    }

    /**
     * 搜索历史
     */
    public BindingCommand searchHistory = new BindingCommand(new BindingAction() {
        @Override
        public void call() {
            startActivity(SearchHistoryKeywordActivity.class);
        }
    });

    /**
     * 同步
     */
    public BindingCommand syncClick = new BindingCommand(new BindingAction() {
        @Override
        public void call() {
            // TODO: 2019/6/26 通过发送liveEvent实现
        }
    });

}
